{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation used by AWS Accra User Group to deploy RDS database",

    "Parameters": {
        "DBInstanceID": {
            "Default": "CarShop",
            "Description": "Car Shop database instance",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "63",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",

            "ConstraintDescription": "Must begin with a letter and must not end with a hyphen or contain two consecutive hyphens."
        },
        "DBName": {
            "Default": "sportscarshop",
            "Description": "My database",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "Must begin with a letter and contain only alphanumeric characters."
        },
        "DBInstanceClass": {
            "Default": "db.t2.micro",

            "Description": "DB instance class",
            "Type": "String",
            "ConstraintDescription": "Must select a valid DB instance type."
        },
        "DBAllocatedStorage": {
            "Default": "20",
            "Description": "The size of the database (GiB)",
            "Type": "Number",
            "MinValue": "5",
            "MaxValue": "20",

            "ConstraintDescription": "must be between 20 and 65536 GiB."
        },
        "DBUsername": {
            "NoEcho": "true",
            "Default": "admin",
            "Description": "Username for MySQL database access",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "16",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
        },

        "DBPassword": {
            "NoEcho": "true",
            "Default": "73Kl8LNDH1xoLJEKVWWO",
            "Description": "Password MySQL database access",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "41",
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "must contain only alphanumeric characters."
        }
    },
    "Resources": {
           "DbSecurityByEC2SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Ingress for Amazon EC2 security group",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort" : "3306",
                        "ToPort" : "3306",
                        "SourceSecurityGroupName": "awseb-e-txpnkac6cd-stack-AWSEBSecurityGroup-1JHMOP9OWDMG4"
                    },
                    {"IpProtocol" : "tcp", "FromPort" : "3306", "ToPort" : "3306", "CidrIp" : "0.0.0.0/0"}
                ]
            }
        },
        "MyDB": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "VPCSecurityGroups": [
                    {
                        "Fn::GetAtt": [ "DbSecurityByEC2SecurityGroup", "GroupId" ]
                    }
                ],
                "DBInstanceIdentifier": {
                    "Ref": "DBInstanceID"
                },

                "DBName": {
                    "Ref": "DBName"
                },
                "DBInstanceClass": {
                    "Ref": "DBInstanceClass"
                },
                "AllocatedStorage": {
                    "Ref": "DBAllocatedStorage"
                },
                "Engine": "MySQL",
                "EngineVersion": "8.0.17",
                "MasterUsername": {

                    "Ref": "DBUsername"
                },
                "MasterUserPassword": {
                    "Ref": "DBPassword"

                },
                "MonitoringInterval": "60",
                "MonitoringRoleArn": "arn:aws:iam::946043019376:role/rds-monitoring-role"
            }
        }
    },
    "Outputs": {
        "HostName": {
            "Description": "InstanceId of the newly created RDS Instance",
            "Value" : {
		 "Fn::GetAttr": ["MyDB","Endpoint.Address"]
	    }
        }
    }    
}
